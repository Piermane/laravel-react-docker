name: CI/CD
on:
  workflow_dispatch:
    inputs:
      run_migrations:
        description: 'Run database migrations'
        required: true
        type: boolean
        default: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set repository name to lowercase
        id: vars
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Laravel Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./laravel-api
          file: ./laravel-api/Dockerfile
          push: false
          load: true
          tags: ghcr.io/${{ env.REPO_NAME }}/laravel:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build React Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./react-frontend
          file: ./react-frontend/Dockerfile
          push: false
          load: true
          tags: ghcr.io/${{ env.REPO_NAME }}/react:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Scan Laravel image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ env.REPO_NAME }}/laravel:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results-laravel.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Scan React image for vulnerabilities
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'ghcr.io/${{ env.REPO_NAME }}/react:${{ github.sha }}'
          format: 'sarif'
          output: 'trivy-results-react.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results-*.sarif'

      - name: Push images to GitHub Container Registry
        if: success()
        run: |
          docker push ghcr.io/${{ env.REPO_NAME }}/laravel:${{ github.sha }}
          docker push ghcr.io/${{ env.REPO_NAME }}/react:${{ github.sha }}
          docker tag ghcr.io/${{ env.REPO_NAME }}/laravel:${{ github.sha }} ghcr.io/${{ env.REPO_NAME }}/laravel:latest
          docker tag ghcr.io/${{ env.REPO_NAME }}/react:${{ github.sha }} ghcr.io/${{ env.REPO_NAME }}/react:latest
          docker push ghcr.io/${{ env.REPO_NAME }}/laravel:latest
          docker push ghcr.io/${{ env.REPO_NAME }}/react:latest

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.yml,nginx.conf,laravel-api,react-frontend"
          target: "/root/laravel-react-docker"

      - name: Deploy to Server
        id: deploy
        uses: appleboy/ssh-action@master
        env:
          LARAVEL_IMAGE: ghcr.io/${{ env.REPO_NAME }}/laravel:${{ github.sha }}
          REACT_IMAGE: ghcr.io/${{ env.REPO_NAME }}/react:${{ github.sha }}
          RUN_MIGRATIONS: ${{ github.event.inputs.run_migrations }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: LARAVEL_IMAGE,REACT_IMAGE,RUN_MIGRATIONS
          script: |
            cd /root/laravel-react-docker
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull $LARAVEL_IMAGE
            docker pull $REACT_IMAGE
            docker-compose down
            
            echo "${{ secrets.LARAVEL_ENV }}" > laravel-api/.env
            
            docker-compose up -d
            
            docker-compose exec -T laravel chown -R www-data:www-data /var/www/html/storage
            
            if [ "$RUN_MIGRATIONS" = "true" ]; then
              echo "–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π..."
              docker-compose exec -T laravel php artisan migrate --force
            else
              echo "–ü—Ä–æ–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π."
            fi
            
            docker-compose exec -T laravel php artisan config:clear
            docker-compose exec -T laravel php artisan cache:clear
            docker-compose exec -T laravel php artisan route:cache
            docker-compose exec -T laravel php artisan view:cache
            
            docker-compose exec -T laravel composer dump-autoload --optimize
            
            docker image prune -af
            
            echo "Deployment log:"
            docker-compose logs --tail=100

      - name: Send Telegram Notification
        if: always()
        env:
          DEPLOY_STEP_OUTCOME: ${{ steps.deploy.outcome }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          format: html
          message: |
            ${{ job.status == 'success' && 'üü¢' || 'üî¥' }} <b>Deployment ${{ job.status == 'success' && 'finished' || 'failed' }}!</b>
            <b>Status:</b> ${{ job.status }}
            <b>Project:</b> ${{ github.repository }}
            <b>Branch:</b> ${{ github.ref }}
            <b>Commit:</b> ${{ github.sha }}
            <b>Deployed by:</b> ${{ github.actor }}
            <b>Target Server:</b> ${{ secrets.SERVER_IP }}
            ${{ job.status != 'success' && format('<b>Error Details:</b>\n- Deploy step: {0}', env.DEPLOY_STEP_OUTCOME) || '' }}

