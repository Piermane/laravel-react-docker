name: CI/CD
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      run_migrations:
        description: 'Run database migrations'
        required: true
        type: boolean
        default: false
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Get deploy start time
        id: deploy_start
        run: echo "::set-output name=time::$(date)"
      - name: Get deploy end time
        id: deploy_end
        run: echo "::set-output name=time::$(date)"
      - name: Get Laravel Version
        run: |
          echo "LARAVEL_VERSION=$(docker-compose exec laravel php artisan --version | awk '{print $3}')" >> $GITHUB_ENV
      - name: Get Node.js Version
        run: |
          echo "NODE_VERSION=$(docker-compose exec react node --version)" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set repository name to lowercase
        id: vars
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.MY_GITHUB_USERNAME }}
          password: ${{ secrets.MY_GITHUB_TOKEN }}
      - name: Build and push Laravel Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./laravel-api
          file: ./laravel-api/Dockerfile
          push: true
          tags: ghcr.io/${{ env.REPO_NAME }}/laravel:${{ github.sha }}-laravel
          #cache-from: type=registry,ref=ghcr.io/${{ env.REPO_NAME }}/laravel:latest
          cache-to: type=inline
          no-cache: true
      - name: Build and push React Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./react-frontend
          file: ./react-frontend/Dockerfile
          push: true
          tags: ghcr.io/${{ env.REPO_NAME }}/react:${{ github.sha }}-react
          #cache-from: type=registry,ref=ghcr.io/${{ env.REPO_NAME }}/react:latest
          cache-to: type=inline
          no-cache: true
      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.yml,nginx.conf"
          target: "/root/laravel-react-docker"
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        env:
          REPO_NAME: ${{ env.REPO_NAME }}
          GITHUB_SHA: ${{ github.sha }}
          RUN_MIGRATIONS: ${{ github.event.inputs.run_migrations }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: REPO_NAME,GITHUB_SHA,RUN_MIGRATIONS
          script: |
            cd /root/laravel-react-docker
            echo "${{ secrets.MY_GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ secrets.MY_GITHUB_USERNAME }} --password-stdin
            docker pull ghcr.io/$REPO_NAME/laravel:$GITHUB_SHA
            docker pull ghcr.io/$REPO_NAME/react:$GITHUB_SHA
            docker-compose down
            sed -i "s|image: .*laravel.*|image: ghcr.io/$REPO_NAME/laravel:$GITHUB_SHA|" docker-compose.yml
            sed -i "s|image: .*react.*|image: ghcr.io/$REPO_NAME/react:$GITHUB_SHA|" docker-compose.yml
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è .env —Ñ–∞–π–ª–∞
            if [ ! -f .env ]; then
              echo "–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ .env —Ñ–∞–π–ª–∞..."
              docker run --rm ghcr.io/$REPO_NAME/laravel:$GITHUB_SHA cp .env.example .env
              docker-compose up -d
              docker-compose exec laravel php artisan key:generate
              docker-compose exec laravel php artisan config:cache
            else
              echo "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞..."
              docker-compose up -d
            fi
            
            # –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω–æ
            if [ "$RUN_MIGRATIONS" = "true" ]; then
              echo "–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π..."
              docker-compose exec laravel php artisan migrate --force
            else
              echo "–ü—Ä–æ–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π."
            fi
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            üü¢**Deployment finished!**
            **Status:** ${{ job.status }}
            **Project:** ${{ github.repository }}
            **Branch:** ${{ github.ref }}
            **Commit:** ${{ github.sha }}
            **Deployed by:** ${{ github.actor }}

            **Migrations run:** ${{ github.event.inputs.run_migrations }}
            **Target Server:** ${{ secrets.SERVER_IP }}
            **Updated Services:** Laravel, React

            **Start time:** ${{ steps.deploy_start.outputs.time }}
            **End time:** ${{ steps.deploy_end.outputs.time }}

            **Laravel Version:** ${{ env.LARAVEL_VERSION }}
            **Node.js Version:** ${{ env.NODE_VERSION }}

            **Environment:** test
