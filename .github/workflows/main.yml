name: CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      run_migrations:
        description: 'Run database migrations'
        required: true
        type: boolean
        default: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set repository name to lowercase
        id: vars
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Laravel Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./laravel-api
          push: true
          tags: ghcr.io/${{ env.REPO_NAME }}/laravel:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ env.REPO_NAME }}/laravel:latest
          cache-to: type=inline

      - name: Build and push React Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./react-frontend
          push: true
          tags: ghcr.io/${{ env.REPO_NAME }}/react:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/${{ env.REPO_NAME }}/react:latest
          cache-to: type=inline

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.yml,nginx.conf"
          target: "/root/laravel-react-docker"

      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        env:
          REPO_NAME: ${{ env.REPO_NAME }}
          GITHUB_SHA: ${{ github.sha }}
          RUN_MIGRATIONS: ${{ github.event.inputs.run_migrations }}
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          envs: REPO_NAME,GITHUB_SHA,RUN_MIGRATIONS
          script: |
            cd /root/laravel-react-docker
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/$REPO_NAME/laravel:$GITHUB_SHA
            docker pull ghcr.io/$REPO_NAME/react:$GITHUB_SHA
            docker-compose down
            sed -i "s|image: .*laravel.*|image: ghcr.io/$REPO_NAME/laravel:$GITHUB_SHA|" docker-compose.yml
            sed -i "s|image: .*react.*|image: ghcr.io/$REPO_NAME/react:$GITHUB_SHA|" docker-compose.yml
            
            # Проверка существования .env файла
            if [ ! -f .env ]; then
              echo "Создание нового .env файла..."
              docker run --rm ghcr.io/$REPO_NAME/laravel:$GITHUB_SHA cp .env.example .env
              docker-compose up -d
              docker-compose exec laravel php artisan key:generate
              docker-compose exec laravel php artisan config:cache
            else
              echo "Обновление существующего проекта..."
              docker-compose up -d
            fi
            
            # Запуск миграций, если указано
            if [ "$RUN_MIGRATIONS" = "true" ]; then
              echo "Запуск миграций..."
              docker-compose exec laravel php artisan migrate --force
            else
              echo "Пропуск миграций."
            fi

      - name: Send Telegram Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            Deployment finished.
            Status: ${{ job.status }}
            Migrations run: ${{ github.event.inputs.run_migrations }}
